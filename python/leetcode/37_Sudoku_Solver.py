# /usr/bin/python3.6
# -*- coding:utf-8 -*-


class Solution(object):
    def solveSudoku(self, board):
        """
        :type board: List[List[str]]
        :rtype: None Do not return anything, modify board in-place instead.
        """
        def solve():
            for i in range(len(board)):
                for j in range(len(board[0])):
                    if board[i][j] == '.':
                        for c in "123456789":
                            if is_valid(i, j, c):
                                board[i][j] = c
                                if solve():
                                    return True
                                board[i][j] = '.'
                        return False
            print(board)
            return True

        def is_valid(i, j, c):
            for k in range(9):
                if board[k][j] == c and k != i:
                    return False
                if board[i][k] == c and k != j:
                    return False
                if board[i//3*3+k//3][j//3*3+k%3] == c:
                    return False
            return True
        solve()



def main():
    s = Solution()
    s.solveSudoku([["5","3",".",".","7",".",".",".","."],["6",".",".","1","9","5",".",".","."],[".","9","8",".",".",".",".","6","."],["8",".",".",".","6",".",".",".","3"],["4",".",".","8",".","3",".",".","1"],["7",".",".",".","2",".",".",".","6"],[".","6",".",".",".",".","2","8","."],[".",".",".","4","1","9",".",".","5"],[".",".",".",".","8",".",".","7","9"]])
    s.solveSudoku([['.', '.', '.', '6', '8', '.', '.', '.', '4'], ['.', '.', '1', '.', '.', '7', '8', '.', '.'],['3', '6', '.', '.', '.', '.', '2', '5', '7'], ['2', '.', '.', '.', '3', '.', '.', '4', '.'], ['5', '.', '.', '8', '1', '2', '.', '.', '.'], ['.', '8', '.', '4', '.', '9', '5', '.', '3'], ['6', '.', '3', '.', '.', '8', '7', '.', '.'], ['.', '2', '.', '9', '.', '.', '6', '3', '5'], ['9', '.', '.', '.', '.', '.', '4', '.', '.']])
    s.solveSudoku([['.', '4', '2', '.', '.', '.', '1', '8', '.'],
                   ['.', '.', '.', '.', '8', '.', '.', '4', '3'],
                   ['.', '.', '.', '5', '1', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '.', '7', '4', '.', '.'],
                   ['9', '3', '.', '.', '.', '.', '.', '5', '2'],
                   ['.', '.', '7', '1', '.', '.', '.', '.', '.'],
                   ['.', '.', '.', '.', '4', '2', '.', '.', '.'],
                   ['1', '7', '.', '.', '5', '.', '.', '.', '.'],
                   ['.', '2', '9', '.', '.', '.', '3', '6', '.']]
                  )


if __name__ == "__main__":
    main()
