# /usr/bin/python3.6
# -*- coding:utf-8 -*-


class Solution(object):

    def largestDivisibleSubset(self, nums):
        """
        :type nums: List[int]
        :rtype: List[int]
        """
        nums.sort()
        ret = [[num] for num in nums]
        longest = []
        for i, num in enumerate(nums):
            for j in range(0, i, 1):
                r = ret[j]
                if num % r[-1] == 0 and len(ret[i]) < len(r)+1:
                    ret[i] = r + [num]
            if len(longest) < len(ret[i]):
                longest = ret[i]
        return longest








def main():
    s = Solution()
    print(s.largestDivisibleSubset([1,2,8,4]))
    print(s.largestDivisibleSubset([1,2,3]))
    print(s.largestDivisibleSubset([2,10000,10000001]))
    print(s.largestDivisibleSubset([3,4,16,8]))
    print(s.largestDivisibleSubset([472,105,328,922,963,625,827,232,913,832,730,152,697,614,570,639,459,895,70,488,239,596,930,402,904,197,911,126,876,535,597,332,863,870,646,839,878,751,528,959,929,679,7,543,248,353,494,67,841,732,662,122,485,565,318,747,42,545,282,638,228,496,860,874,334,556,103,437,83,61,365,761,259,361,64,612,206,131,452,938,144,573,774,243,521,102,787,154,92,15,649,951,240,506,342,770,940,135,700,820,393,412,884,356,618,366,807,907,861,380,32,921,622,23,760,57,466,416,391,273,706,512,212,998,263,279,743,27,514,98,996,231,905,902,91,636,285,364,609,189,738,368,203,846,6,970,210,748,594,268,157,726,257,419,999,797,869,96,792,451,352,693,894,987,978,595,518,346,315,114,900,160,119,721,218,814,988,477,66,733,740,421,537,642,178,882,21,337,868,350,945,815,219,290,129,684,640,155,409,712,372,222,848,765,932,283,14,819,544,146,425,958,644,903,458,473,85,627,845,641,340,198,961,456,992,495,413,170,390,559,143,166,428,100,809,647,354,619,435,250,837,533,530,883,948,816,432,261,623,560,503,406,916,147,826,277,312,253,729,251,434,443,686,683,944,186,829,898,63,457,405,417,811,579,957,404,532,621,8,260,445,45,887,296,728,236,591,447,422,696,481,893,264,974,701,714,379,12,482,541,942,385,849,345,469,705,527,571,799,962,650,387,552,97,808,971,242,803,36,505,777,89,507,52,47,436,703,716,794,229,628,108,800,779,69,449,165,973,897,324,943,689,917,745,76,873,164,616,9,24,237,739,892,818,718,351,617,420,744,314,687,956,782,781,297,424,737,912,522,272,408,369,645,275,611,840,382,125,890,162,568,295,349,301,997,38,908,179,333,439,899,329,65,159,142,121,923,247,854,802,330,335,43,843,254,137,954,515,790,950,566,857,490,822,519,286,150,583,796,291,941,37,742,723,784,976,374,780,888,569,879,805,88,468,463,969,258,877,176,564,654,798,789,793,401,493,557,592,202,418,115,852,462,953,717,338,480,981,396,634,836,681,629,935,553,540,397,665,758,817,224,821,158,968,323,17,3,776,177,81,906,749,344,169,140,926,118,501,927,504,598,875,34,643,548,813,470,508,736,602,378,59,652,994,915,249,213,661,450,39,267,586,55,727,25,113,141,734,972,872,300,516,526,270,112,555,171,766,256,127,10,316,554,194,448,657,847,174,241,620,68,562,426,133,265,491,909,989,168,173,167,928,41,567,986,724,658,208,699,709,306,933,2,653,881,298,750,577,702,319,694,394,601,651,309,16,310,668,486,192,136,33,856,134,563,370,358,498,593,230,484,308,851,235,51,551,536,980,415,810,246,307,79,221,580,576,101,438,791,455,673,75,610,376,44,624,399,294,271,195,725,637,78,773,806,967,163,871,389,453,558,925,193,467,274,371,788,599]))
    print(s.largestDivisibleSubset([359,376,43,315,167,216,777,625,498,442,172,324,987,400,280,367,371,24,418,208,812,488,861,646,63,804,863,853,102,174,443,901,486,126,419,701,254,550,48,214,873,386,965,504,753,336,527,522,895,339,361,755,423,558,551,276,11,724,70,823,624,555,300,42,607,554,84,508,953,649,732,338,613,236,90,762,612,194,452,972,140,747,209,690,22,220,413,91,36,998,341,77,956,246,512,464,198,547,888,476,782,977,776,896,940,321,347,264,621,10,829,383,939,825,441,326,822,754,130,379,265,945,577,491,252,273,792,168,699,866,319,704,708,148,230,521,914,988,846,88,121,600,217,499,513,427,344,3,242,947,627,325,146,469,375,12,815,46,67,193,648,963,876,78,366,531,49,532,475,875,398,69,821,454,497,170,922,872,533,736,917,951,609,461,598,571,118,798,981,835,113,530,799,995,930,682,38,405,557,787,377,810,278,874,331,199,97,215,286,13,165,473,115,816,584,707,237,568,72,166,249,805,247,746,534,408,759,739,925,855,305,210,219,470,807,936,974,417,519,288,15,64,438,581,455,250,503,496,145,256,327,255,346,251,109,650,813,679,119,619,721,406,593,489,924,964,563,897,27,769,687,608,224,462,432,39,937,384,990,45,33,154,723,152,772,795,364,283,833,395,495,164,181,232,116,899,458,548,191,320,889,587,353,661,856,814,764,529,737,948,127,335,695,960,858,801,543,916,588,478,103,592,20,481,958,618,334,424,397,694,314,158,114,700,381,287,683,966,459,923,902,332,892,235,938,178,431,631,296,885,820,409,585,141,223,535,688,258,689,884,720,365,611,277,985,684,416,666,182,961,108,355,525,862,412,549,186,244,589,421,52,76,718,352,702,510,117,290,692,603,864,323,388,536,392,151,436,350,788,75,900,490,306,975,207,261,870,188,729,231,485,348,507,676,238,111,180,984,135,771,671,51,1,997,675,869,950,445,434,92,137,221,907,245,17,794,360,935,370,239,362,175,620,973,784,106,136,122,281,426,196,134,68,634,672,28,385,411,526,735,633,841,227,86,500,653,906,933,932,129,435,756,262,698,329,204,941,614,668,139,403,229,243,808,857,659,640,545,345,82,228,516,734,566,868,414,474,506,363,87,173,578,575,312,169,908,929,444,685,657,23,524,358,225,9,41,999,834,546,920,849,456,93,651,433,586,882,942,457,62,839,818,260,369,773,890,865,596,98,271,669,962,311,996,160,200,767,539,163,800,757,582,343,538,131,567,446,213,378,959,299,915,761,313,845,712,330,253,573,18,138,317,56,691,349,605,463,652,781,992,422,32,664,711,284,741,289,57,697,368,583,943,40,298,430,851,913,745,65,179,705,630,401,674,465,487,878,477,240,35,572,838,968,678,342,775,30,806,680,969,2,241,909,803,979,460,518,156,85,643,850,597,843,89]))


if __name__ == "__main__":
    main()
